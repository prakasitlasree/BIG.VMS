<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PwD4AD8A/AB/APwAfwD+AP8A
</value>
  </data>
</root>