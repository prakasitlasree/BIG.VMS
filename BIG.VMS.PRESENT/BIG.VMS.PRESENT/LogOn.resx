<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEACADIBgAAFgAAACgAAAAYAAAAMAAAAAEACAAAAAAAoAIAAAAAAAAAAAAAAAEAAAAA
        AAB0xf8AQKH/AAdp5AAhTKEAraOjAJ6SlAAVcOUAxP//AMPCvwCjnp4Absz/AAVo5QAfS6IAZcb/AIbe
        /wBnuf8AE4z/ABuI/wCP3/8AlNr/AOLe2QDY//8ACYH/ACKf/wA6qf8AYMv/ANf//wCr6P8ASqv/AIDs
        /wCopKUAL5r/AJ+ZlQAakv8ALZP/ACSg/wDa19MA3NvZAH1uZQC38v8AZLn/AJ/h/wBTrv8AEYf/AL35
        /wCd4P8Aesr/AP/++gAbcuUAJpb/AB5KogBdxv8AIkyhAHfG/wAYkf8Act7/AE64/wCB5f8AitP/ACCd
        /wAZkv8A+/n5AI/W/wDU09IAAGTlAFKu/wAdkf8AKH3OAE23/wDQz80AfO//AAZY1gAEbOoAJ1OlAHBp
        bACq6P8AXcf/AHfF/wBRtf8AZFddAD+g/wAklf8AWFFUAEQ/VQAWjf8Ae8f/ABOI/wB3am8AxcHCAAZ/
        /wCXiY4AAGXhAKCVmgC4//8AVK7/AFa+/wAglf8AnN7/AD+KxQCg4v8AHnfbAP///gDs6+oAfHN3AFbF
        /wBkXGAAZbj/ACJ52QC68P8AcGdtAGi6/wAUjP8ATrn/AEiv/wAomP8AE0qpAGG3/wDFwsAAiNP/ACRQ
        pQAKR6wALqH/AJfl/wApnv8AU7X/ADGn/wCBeX4AXsj/AF/J/wAYkP8AdsX/AOTg3wAFUcgAfG5yAIqB
        hADt6+wAZdD/AGvS/wBo2P8AOaD/ABiG/wA+pP8ArKSmAApJsQBAsf8ARLD/AJePlABFt/8AB0+/AAAA
        AABGuf8A4N/cAC+CzQAxnv8APp//ACiA1ABJvP8AkYSHAPn49wCQhooANKj/AARg4AAEZ+UAZrv/AKb4
        /wAddeYAamJmAAZW0AB93P8ABl3bAPb39wCYkJMAgsz/AGFVTABYvv8AIJr/ADuMzgAulf8AOK3/ABZw
        3wCy7/8A/f79AMO+wACFz/8AQKX/ACqh/wBwy/8AysjIADun/wArkv8AQbT/AFPB/wDj4uEA4ODeAAZQ
        wwAMhP8AF3PmAHPi/wCs6f8AJn3ZACeh/wBLw/8ATcD/AF3K/wC48v8Ao5+cAKOZnAAGVM0Ahs//ACuA
        1wBkz/8AFo7/ADur/wAQiv8AS6//AAhLtgCS2P8ASav/ANv//wAAAAAAjdX/ALbx/wCG9v8AW1RXAAhM
        uAAITrwAXrf/AB2L/wBhz/8ACUWoAGHK/wAYj/8AEob/AEU8QAAAZ+sAKJz/AExCRwBzam0A1v//ADOn
        /wDt6uoAg3x/AGPP/wCe4f8AGI3/AITO/wD9/fwAkdj/AOXk5ABLq/8AL6L/AJDY/wARhv8A0M/MAP//
        /wD///8AlZWVlXPleI/X4OGUwoTPp0epoZWVlZWVlZWVSaTJypa+sn25rzw2NoFvb8SVlZWVlZWVNNq0
        ukTv+utg5ysrVughyAKVlZWVlZWVDAdj3FWji5m8kXDmiEwNCgaVlZWVlZWVAxonGy33tzVuXlAiERYQ
        FwuVlZWVlZWVMiwTLigcHzEYOBk3HTkOEjCVlZWVlZWVAxXMxvPY0DUPKpq9jFnVO6KVlZWVlZWVMiwT
        LigcHzEYOBk3HTkOEjCVlZWVlZWVAxonGy379YIPKlAiERYQFwuVlZWVlZWVDAcpdgDi2Y1xTl9/8jMN
        CgaVlZWVlZWVA+7dS2E+rABqQQGx48PTIwuVlZWVlZWVDAcpOk10+bjWfK6A0jMNCgaVlZWVlZWVNBVs
        eqiJy7+T1HlR9PwhIwuVlZWVlZWVd13eRsWK5GickKB7QlRycqWVlZWVlZWVlWKwmEOb0cdrZLMCW0Dq
        SJWVlZWVlZWVlZUELxQFlZWVlZUmJCBTlZWVlZWVlZWVlZUELxQFlZWVlZUmJCCtlZWVlZWVlZWVlZUE
        /sEFlZWVlZXtJc1SlZWVlZWVlZWVlZWO/vjOlZWVlZVK/QnflZWVlZWVlZWVlZVa/mZYhZWVleweCAns
        lZWVlZWVlZWVlZWdh/aDtmdPbR4ICAnplZWVlZWVlZWVlZWVXP6qwJclP7t1RWmVlZWVlZWVlZWVlZWV
        lav+/mW1PZ7wppWVlZWVlZWVlZWVlZWVlZVXkp+G8X7slZWVlZWVlZWV8AAfAOAADwDgAA8A4AAPAOAA
        DwDgAA8A4AAPAOAADwDgAA8A4AAPAOAADwDgAA8A4AAPAOAADwDwAB8A+Hw/APh8PwD4fD8A+Hw/APg4
        PwD4AD8A/AB/AP4A/wD/Af8A
</value>
  </data>
</root>